{"version":3,"names":[],"mappings":"","sources":["app.js"],"sourcesContent":["var scene, camera, shadowLight, light, backLight, renderer;\nvar container,\n    HEIGHT,\n    WIDTH,\n    windowHalfX,\n    windowHalfY,\n    FOV,\n    aspectRatio,\n    nearPlane,\n    farPlane,\n    mesh,\n    stats,\n    composer,\n    delta,\n    uniforms;\nvar mouseX = 0, mouseY = 0;\nvar baseTime = +new Date;\nvar clock = new THREE.Clock();\n\nwindow.addEventListener('resize', onWindowResize, false);\n// document.addEventListener( 'mousemove', onDocumentMouseMove, false );\n// window.addEventListener('keyup', onKeyUp, false );\n\ninit();\n\nvar tag = document.createElement('script');\ntag.src = 'http://www.youtube.com/player_api';\nvar firstScriptTag = document.getElementsByTagName('script')[0];\nfirstScriptTag.parentNode.insertBefore(tag, firstScriptTag);\n\nvar yt_player;\nfunction onYouTubePlayerAPIReady() {\n  yt_player = new YT.Player('youtube_player', {\n    events: {\n      'onReady': onPlayerReady,\n      'onStateChange': onPlayerStateChange\n\n    }\n  });\n}\n\nfunction onPlayerReady() {\n  $('youtubeBg').onclick = function(){\n    yt_player.pauseVideo();\n    removeClass($('youtubeBg'), 'on');\n  }\n}\n\nvar myPlayerState;\nfunction onPlayerStateChange(event) {\n  if (event.data == 1) {\n  }else{\n    requestID = requestAnimationFrame(animate);\n    removeClass($('youtubeBg'), 'on');\n    addClass($('youtubeBg'), 'off');\n  }\n  myPlayerState = event.data;\n}\n\n\nfunction init(){\n  HEIGHT = window.innerHeight;\n  WIDTH = window.innerWidth;\n  windowHalfX = WIDTH / 2;\n  windowHalfY = HEIGHT / 2;\n\n  renderer = new THREE.WebGLRenderer({ antialias:true });\n  renderer.setSize(window.innerWidth, window.innerHeight);\n  // $('world').style.left = (WIDTH - Math.min(WIDTH, 650)) * 0.5 +'px';\n  // $('world').style.width = Math.min(WIDTH, 650) + 'px';\n\n  renderer.setClearColor(0x000000, 1);\n  $('world').appendChild(renderer.domElement);\n\n  scene = new THREE.Scene();\n\n  uniforms = {\n    time: { type: 'f', value: 0.1 },\n    tex:  { type: 't', value: THREE.ImageUtils.loadTexture( 'images/jacket.jpg') },\n    WIDTH: {type: 'f', value: WIDTH},\n    HEIGHT: {type: 'f', value: HEIGHT},\n    mouseX: {type: 'f', value: mouseX},\n    mouseY: {type: 'f', value: mouseY}\n  };\n\n  // createStats();\n  createCamera();\n  createJacket();\n  createGlitch();\n  animate();\n\n}\n\nfunction createCamera(){\n  camera = new THREE.PerspectiveCamera(45, 1000 / 1000, 0.1,10000);\n  camera.position.z = 1000;\n  scene.add(camera);\n}\n\n\nfunction createJacket(){\n  material = new THREE.ShaderMaterial({\n    vertexShader: document.getElementById('vshader').textContent,\n    fragmentShader: document.getElementById('fshader').textContent,\n    uniforms: uniforms,\n    blending: THREE.AdditiveBlending, transparent: true, depthTest: false\n  });\n  tobject = new THREE.Mesh( new THREE.PlaneGeometry(1000, 1000 ,1,1), material);\n  scene.add(tobject);\n\n}\n\nfunction createGlitch(){\n  var renderPass = new THREE.RenderPass(scene, camera);\n  var effectGlitch = new THREE.GlitchPass(8);\n  effectGlitch.renderToScreen = true;\n\n  composer = new THREE.EffectComposer(renderer);\n  composer.setSize(WIDTH, HEIGHT);\n  composer.addPass(renderPass);\n  composer.addPass(effectGlitch);\n}\n\nfunction createStats(){\n  stats = new Stats();\n  stats.domElement.style.position = 'absolute';\n  stats.domElement.style.top = '0';\n  stats.domElement.style.right = '0';\n  $('world').appendChild(stats.domElement);\n}\n\nfunction animate(){\n  requestID = requestAnimationFrame(animate);\n  if(myPlayerState == 1 || myPlayerState == 3){\n    cancelAnimationFrame(requestID);\n    removeClass($('youtubeBg'), 'off');\n    addClass($('youtubeBg'), 'on');\n  }\n\n  material.uniforms.time.value = clock.elapsedTime;\n  delta = clock.getDelta();\n  render();\n  // stats.update();\n}\n\nfunction render(){\n  // renderer.render(scene, camera);\n  composer.render(clock.elapsedTime);\n}\n\nfunction onDocumentMouseMove(event) {\n  material.uniforms.mouseX.value = ( event.clientX - windowHalfX ) * 0.15;\n  material.uniforms.mouseY.value = ( event.clientY - windowHalfY ) * 0.15;\n  // console.log('x:'+material.uniforms.mouseX.value + 'y:'+ material.uniforms.mouseY.value);\n}\n\nfunction onWindowResize(){\n  WIDTH = window.innerWidth;\n  HEIGHT = window.innerHeight;\n  windowHalfX = window.innerWidth / 2;\n  windowHalfY = window.innerHeight / 2;\n  // camera.aspect = window.innerWidth / window.innerHeight;\n  // camera.updateProjectionMatrix();\n  renderer.setSize(window.innerWidth, window.innerHeight);\n  composer.setSize(window.innerWidth, window.innerHeight);\n  material.uniforms.WIDTH.value = WIDTH;\n  material.uniforms.HEIGHT.value = HEIGHT;\n  scene.remove(tobject);\n  createJacket();\n  // $('world').style.left = (WIDTH - Math.min(WIDTH, 650)) * 0.5 +'px';\n  // $('world').style.width = Math.min(WIDTH, 650) + 'px';\n}\n\nfunction onKeyUp(e){\n  e.preventDefault();\n if (e.keyCode == 27 ) {\n   removeClass($('youtubeBg'), 'on');\n   addClass($('youtubeBg'), 'off');\n }\n}\n\nfunction addClass(el, className){\n  if (el.classList)\n    el.classList.add(className);\n  else\n    el.className += ' ' + className;\n}\n\nfunction removeClass(el, className){\n  if (el.classList)\n    el.classList.remove(className);\n  else\n  el.className = el.className.replace(new RegExp('(^|\\\\b)' + className.split(' ').join('|') + '(\\\\b|$)', 'gi'), ' ');\n}\n\nfunction $( id ) {\n  return document.getElementById( id );\n}\n\nfunction map_range(value, low1, high1, low2, high2) {\n    return low2 + (high2 - low2) * (value - low1) / (high1 - low1);\n}\n"],"file":"app.min.js","sourceRoot":"/source/"}