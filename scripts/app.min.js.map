{"version":3,"sources":["app.js"],"names":["init","HEIGHT","window","innerHeight","WIDTH","innerWidth","windowHalfX","windowHalfY","renderer","THREE","WebGLRenderer","antialias","setSize","setClearColor","document","getElementById","appendChild","domElement","scene","Scene","uniforms","time","type","value","tex","ImageUtils","loadTexture","mouseX","mouseY","createCamera","createJacket","createGlitch","animate","camera","PerspectiveCamera","position","z","add","material","ShaderMaterial","vertexShader","textContent","fragmentShader","blending","AdditiveBlending","transparent","depthTest","tobject","Mesh","PlaneGeometry","renderPass","RenderPass","effectGlitch","GlitchPass","renderToScreen","composer","EffectComposer","addPass","requestAnimationFrame","Date","baseTime","delta","clock","getDelta","render","onDocumentMouseMove","event","clientX","clientY","console","log","onWindowResize","remove","$","id","map_range","low1","high1","low2","high2","createLoadScene","result","object","geometry","light","count","range","MeshLambertMaterial","color","BoxGeometry","i","x","Math","random","y","rotation","matrixAutoUpdate","updateMatrix","PointLight","DirectionalLight","shadowLight","backLight","container","FOV","aspectRatio","nearPlane","farPlane","mesh","stats","Clock","addEventListener"],"mappings":"AAwBA,QAASA,QACPC,OAASC,OAAOC,YAChBC,MAAQF,OAAOG,WACfC,YAAcF,MAAQ,EACtBG,YAAcN,OAAS,EAEvBO,SAAW,GAAIC,OAAMC,eAAgBC,WAAU,IAC/CH,SAASI,QAAQR,MAAOH,QACxBO,SAASK,cAAc,EAAU,GACjCC,SAASC,eAAe,SAASC,YAAYR,SAASS,YAEtDC,MAAQ,GAAIT,OAAMU,MAElBC,UACEC,MAAQC,KAAM,IAAKC,MAAO,IAC1BC,KAAQF,KAAM,IAAKC,MAAOd,MAAMgB,WAAWC,YAAa,sBACxDtB,OAAQkB,KAAM,IAAKC,MAAOnB,OAC1BH,QAASqB,KAAM,IAAKC,MAAOtB,QAC3B0B,QAASL,KAAM,IAAKC,MAAOI,QAC3BC,QAASN,KAAM,IAAKC,MAAOK,SAG7BC,eACAC,eACAC,eACAC,UAGF,QAASH,gBACPI,OAAS,GAAIxB,OAAMyB,kBAAkB,GAAI,EAAa,GAAI,KAC1DD,OAAOE,SAASC,EAAI,IACpBlB,MAAMmB,IAAIJ,QAKZ,QAASH,gBACPQ,SAAW,GAAI7B,OAAM8B,gBACnBC,aAAc1B,SAASC,eAAe,WAAW0B,YACjDC,eAAgB5B,SAASC,eAAe,WAAW0B,YACnDrB,SAAUA,SACVuB,SAAUlC,MAAMmC,iBAAkBC,aAAa,EAAMC,WAAW,IAElEC,QAAU,GAAItC,OAAMuC,KAAM,GAAIvC,OAAMwC,cAAc,IAAM,IAAM,EAAE,GAAIX,UACpEpB,MAAMmB,IAAIU,SAIZ,QAAShB,gBACP,GAAImB,GAAa,GAAIzC,OAAM0C,WAAWjC,MAAOe,QACzCmB,EAAe,GAAI3C,OAAM4C,WAAW,KACxCD,GAAaE,gBAAiB,EAE9BC,SAAW,GAAI9C,OAAM+C,eAAehD,UACpC+C,SAAS3C,QAAQR,MAAOH,QACxBsD,SAASE,QAAQP,GACjBK,SAASE,QAAQL,GAGnB,QAASpB,WACP0B,sBAAsB1B,SACtBM,SAASlB,SAASC,KAAKE,QAAU,GAAIoC,MAAOC,UAAY,IACxDC,MAAQC,MAAMC,WACdC,SAGF,QAASA,UAEPT,SAASS,OAAOH,OAGlB,QAASI,qBAAoBC,GAC3B5B,SAASlB,SAASO,OAAOJ,MAA0C,KAAhC2C,EAAMC,QAAU7D,aACnDgC,SAASlB,SAASQ,OAAOL,MAA0C,KAAhC2C,EAAME,QAAU7D,aACnD8D,QAAQC,IAAI,KAAKhC,SAASlB,SAASO,OAAOJ,MAAQ,KAAMe,SAASlB,SAASQ,OAAOL,OAGnF,QAASgD,kBACPnE,MAAQF,OAAOG,WACfJ,OAASC,OAAOC,YAChBG,YAAcJ,OAAOG,WAAa,EAClCE,YAAcL,OAAOC,YAAc,EAGnCK,SAASI,QAAQV,OAAOG,WAAYH,OAAOC,aAC3CoD,SAAS3C,QAAQV,OAAOG,WAAYH,OAAOC,aAC3CmC,SAASlB,SAAShB,MAAMmB,MAAQnB,MAChCkC,SAASlB,SAASnB,OAAOsB,MAAQtB,OACjCiB,MAAMsD,OAAOzB,SACbjB,eAIF,QAAS2C,GAAGC,GACV,MAAO5D,UAASC,eAAgB2D,GAGlC,QAASC,WAAUpD,EAAOqD,EAAMC,EAAOC,EAAMC,GACzC,MAAOD,IAAQC,EAAQD,IAASvD,EAAQqD,IAASC,EAAQD,GAG7D,QAASI,mBACP,GAAIC,IAEF/D,MAAQ,GAAIT,OAAMU,MAClBc,OAAQ,GAAIxB,OAAMyB,kBAAmB,GAAIhC,OAAOG,WAAaH,OAAOC,YAAa,EAAG,KAItF8E,GAAOhD,OAAOE,SAASC,EAAI,IAC3B6C,EAAO/D,MAAMmB,IAAK4C,EAAOhD,OAEzB,IAAIiD,GAAQC,EAAU7C,EAAU8C,EAAOC,EAAQ,IAAKC,EAAQ,GAE5DhD,GAAW,GAAI7B,OAAM8E,qBAAuBC,MAAM,WAClDL,EAAW,GAAI1E,OAAMgF,YAAa,EAAG,EAAG,EAExC,KAAK,GAAIC,GAAI,EAAOL,EAAJK,EAAWA,IAEzBR,EAAS,GAAIzE,OAAMuC,KAAMmC,EAAU7C,GAEnC4C,EAAO/C,SAASwD,GAAMC,KAAKC,SAAW,IAAQP,EAC9CJ,EAAO/C,SAAS2D,GAAMF,KAAKC,SAAW,IAAQP,EAC9CJ,EAAO/C,SAASC,GAAMwD,KAAKC,SAAW,IAAQP,EAE9CJ,EAAOa,SAASJ,EAAoB,EAAhBC,KAAKC,SACzBX,EAAOa,SAASD,EAAoB,EAAhBF,KAAKC,SACzBX,EAAOa,SAAS3D,EAAoB,EAAhBwD,KAAKC,SAEzBX,EAAOc,kBAAmB,EAC1Bd,EAAOe,eAEPhB,EAAO/D,MAAMmB,IAAK6C,EAapB,OATAD,GAAO/D,MAAM8E,kBAAmB,EAEhCZ,EAAQ,GAAI3E,OAAMyF,WAAY,UAC9BjB,EAAO/D,MAAMmB,IAAK+C,GAElBA,EAAQ,GAAI3E,OAAM0F,iBAAkB,SACpCf,EAAMjD,SAASwD,EAAI,EACnBV,EAAO/D,MAAMmB,IAAK+C,GAEXH,EAzKT,GAAI/D,OAAOe,OAAQmE,YAAahB,MAAOiB,UAAW7F,SAC9C8F,UACArG,OACAG,MACAE,YACAC,YACAgG,IACAC,YACAC,UACAC,SACAC,KACAC,MACArD,SACAM,MACAzC,SACAO,OAAS,EAAGC,OAAS,EACrBgC,UAAY,GAAID,MAChBG,MAAQ,GAAIrD,OAAMoG,KAEtB3G,QAAO4G,iBAAiB,SAAUvC,gBAAgB,GAClDrE,OAAO4G,iBAAkB,YAAa7C,qBAAqB,GAE3DjE","file":"app.min.js","sourcesContent":["var scene, camera, shadowLight, light, backLight, renderer;\nvar container,\n    HEIGHT,\n    WIDTH,\n    windowHalfX,\n    windowHalfY,\n    FOV,\n    aspectRatio,\n    nearPlane,\n    farPlane,\n    mesh,\n    stats,\n    composer,\n    delta,\n    uniforms;\nvar mouseX = 0, mouseY = 0;\nvar baseTime = +new Date;\nvar clock = new THREE.Clock();\n\nwindow.addEventListener('resize', onWindowResize, false);\nwindow.addEventListener( 'mousemove', onDocumentMouseMove, false );\n\ninit();\n\nfunction init(){\n  HEIGHT = window.innerHeight;\n  WIDTH = window.innerWidth;\n  windowHalfX = WIDTH / 2;\n  windowHalfY = HEIGHT / 2;\n\n  renderer = new THREE.WebGLRenderer({ antialias:true });\n  renderer.setSize(WIDTH, HEIGHT);\n  renderer.setClearColor(0x000000, 1);\n  document.getElementById('world').appendChild(renderer.domElement);\n\n  scene = new THREE.Scene();\n\n  uniforms = {\n    time: { type: 'f', value: 0.1 },\n    tex:  { type: 't', value: THREE.ImageUtils.loadTexture( 'images/jacket.jpg') },\n    WIDTH: {type: 'f', value: WIDTH},\n    HEIGHT: {type: 'f', value: HEIGHT},\n    mouseX: {type: 'f', value: mouseX},\n    mouseY: {type: 'f', value: mouseY}\n  };\n\n  createCamera();\n  createJacket();\n  createGlitch();\n  animate();\n}\n\nfunction createCamera(){\n  camera = new THREE.PerspectiveCamera(45, 1000 / 1000, 0.1,10000);\n  camera.position.z = 1000;\n  scene.add(camera);\n}\n\n\n\nfunction createJacket(){\n  material = new THREE.ShaderMaterial({\n    vertexShader: document.getElementById('vshader').textContent,\n    fragmentShader: document.getElementById('fshader').textContent,\n    uniforms: uniforms,\n    blending: THREE.AdditiveBlending, transparent: true, depthTest: false\n  });\n  tobject = new THREE.Mesh( new THREE.PlaneGeometry(1000, 1000 ,1,1), material);\n  scene.add(tobject);\n\n}\n\nfunction createGlitch(){\n  var renderPass = new THREE.RenderPass(scene, camera);\n  var effectGlitch = new THREE.GlitchPass(1200);\n  effectGlitch.renderToScreen = true;\n\n  composer = new THREE.EffectComposer(renderer);\n  composer.setSize(WIDTH, HEIGHT);\n  composer.addPass(renderPass);\n  composer.addPass(effectGlitch);\n}\n\nfunction animate(){\n  requestAnimationFrame(animate);\n  material.uniforms.time.value = (+new Date - baseTime) / 1000;\n  delta = clock.getDelta();\n  render();\n}\n\nfunction render(){\n  // renderer.render(scene, camera);\n  composer.render(delta);\n}\n\nfunction onDocumentMouseMove(event) {\n  material.uniforms.mouseX.value = ( event.clientX - windowHalfX ) * 0.15;\n  material.uniforms.mouseY.value = ( event.clientY - windowHalfY ) * 0.15;\n  console.log('x:'+material.uniforms.mouseX.value + 'y:'+ material.uniforms.mouseY.value);\n}\n\nfunction onWindowResize(){\n  WIDTH = window.innerWidth;\n  HEIGHT = window.innerHeight;\n  windowHalfX = window.innerWidth / 2;\n  windowHalfY = window.innerHeight / 2;\n  // camera.aspect = window.innerWidth / window.innerHeight;\n  // camera.updateProjectionMatrix();\n  renderer.setSize(window.innerWidth, window.innerHeight);\n  composer.setSize(window.innerWidth, window.innerHeight);\n  material.uniforms.WIDTH.value = WIDTH;\n  material.uniforms.HEIGHT.value = HEIGHT;\n  scene.remove(tobject);\n  createJacket();\n}\n\n\nfunction $( id ) {\n  return document.getElementById( id );\n}\n\nfunction map_range(value, low1, high1, low2, high2) {\n    return low2 + (high2 - low2) * (value - low1) / (high1 - low1);\n}\n\nfunction createLoadScene() {\n  var result = {\n\n    scene:  new THREE.Scene(),\n    camera: new THREE.PerspectiveCamera( 65, window.innerWidth / window.innerHeight, 1, 1000 )\n\n  };\n\n  result.camera.position.z = 100;\n  result.scene.add( result.camera );\n\n  var object, geometry, material, light, count = 500, range = 200;\n\n  material = new THREE.MeshLambertMaterial( { color:0xffffff } );\n  geometry = new THREE.BoxGeometry( 5, 5, 5 );\n\n  for( var i = 0; i < count; i++ ) {\n\n    object = new THREE.Mesh( geometry, material );\n\n    object.position.x = ( Math.random() - 0.5 ) * range;\n    object.position.y = ( Math.random() - 0.5 ) * range;\n    object.position.z = ( Math.random() - 0.5 ) * range;\n\n    object.rotation.x = Math.random() * 6;\n    object.rotation.y = Math.random() * 6;\n    object.rotation.z = Math.random() * 6;\n\n    object.matrixAutoUpdate = false;\n    object.updateMatrix();\n\n    result.scene.add( object );\n\n  }\n\n  result.scene.matrixAutoUpdate = false;\n\n  light = new THREE.PointLight( 0xffffff );\n  result.scene.add( light );\n\n  light = new THREE.DirectionalLight( 0x111111 );\n  light.position.x = 1;\n  result.scene.add( light );\n\n  return result;\n}\n"],"sourceRoot":"/source/"}